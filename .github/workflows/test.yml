name: Testing

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2
    
    - name: Install CMake
      if: startsWith(runner.os, 'mac') == false
      uses: ssrobins/install-cmake@v1
            
    - name: Install CMake for macos
      if: startsWith(runner.os, 'mac')
      run: |
          brew update
          brew upgrade cmake

    - name: Configure
      run: |
        cmake -S . -B build -D CMAKE_BUILD_TYPE=Debug

    - name: Build
      run: |
        cmake --build build --config Debug

    - name: Test
      if: startsWith(runner.os, 'ubu') == false
      run: |
        cd build
        ctest -C Debug --output-on-failure --verbose -T Test

    - name: Test with Coverage
      if: startsWith(runner.os, 'ubu')
      run: |
        cd build
        ctest -C Debug --output-on-failure --verbose -T Test -T Coverage

    # - name: Coveralls GitHub Action
    #   uses: coverallsapp/github-action@master
    #   with:
    #     github-token: ${{ github.token }}