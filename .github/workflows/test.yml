name: Testing

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2
    
    - name: Install CMake
      if: startsWith(runner.os, 'mac') == false
      uses: ssrobins/install-cmake@v1
            
    - name: Install CMake for macos
      if: startsWith(runner.os, 'mac')
      run: |
          brew update
          brew upgrade cmake

    - name: Configure
      run: |
        cmake -S . -B build -D CMAKE_BUILD_TYPE=Debug

    - name: Build
      run: |
        cmake --build build --config Debug

    - name: Test
      run: |
        cd build
        ctest -C Debug --output-on-failure --verbose -T Test
        
    - name: Get Coverage
      if: runner.os == 'Linux'
      run: |
        ctest -T Coverage
        cd ..
        
    - name: Generate Coverage Report
      if: runner.os == 'Linux'
      uses: threeal/gcovr-action@v1.1.0
      with:
        html-out: coverage.html
        html-details: true
        html-title: SmartList Coverage Report
        html-theme: github.green
